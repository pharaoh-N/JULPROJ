import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import streamlit as st
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler

st.title("Diabetes Prediction Based on Glucose Level")

url = "https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv"
columns = ["Pregnancies", "Glucose", "BloodPressure", "SkinThickness", 
           "Insulin", "BMI", "DiabetesPedigreeFunction", "Age", "Outcome"]
df = pd.read_csv(url, header=None, names=columns)

X = df[["Glucose"]].values
y = df["Outcome"].values

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

model = LogisticRegression()
model.fit(X_scaled, y)

glucose_range_raw = np.linspace(X.min(), X.max(), 300).reshape(-1, 1)
glucose_range_scaled = scaler.transform(glucose_range_raw)
probs = model.predict_proba(glucose_range_scaled)[:, 1]

fig, ax = plt.subplots(figsize=(8, 6))
scatter = ax.scatter(X, y, alpha=0.4, c=y, cmap="bwr", edgecolor='k', label="Actual Data")
ax.plot(glucose_range_raw, probs, color="black", linewidth=2, label="Sigmoid Curve")
ax.set_xlabel("Glucose (raw values)")
ax.set_ylabel("Probability of Diabetes")
ax.set_title("Logistic Regression: Probability of Diabetes vs. Glucose")
ax.legend()
ax.grid(True)
st.pyplot(fig)

glucose_input = st.number_input("Enter a new patient's glucose level:", min_value=0.0, max_value=300.0, value=150.0)
new_glucose_raw = np.array([[glucose_input]])
new_glucose_scaled = scaler.transform(new_glucose_raw)
probability = model.predict_proba(new_glucose_scaled)[0][1]
prediction = model.predict(new_glucose_scaled)[0]

st.write(f"**Glucose Level:** {glucose_input}")
st.write(f"**Predicted Probability of Diabetes:** {probability:.2f}")
st.write(f"**Prediction:** {'Has Diabetes' if prediction == 1 else 'No Diabetes'}")
